<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ntPPdjlc3w4BADs=
</value>
  </data>
</root>